------------------------
TODO
------------------------
- Constrained delaunay - dynamic algorithm
- Convex hull: Quick Hull from the Valve paper on Hull
- Convex hull: Gift wrapping
- 3d voronoi
- Marching cubes
- Voronoi - incremental 
- Delaunay should keep y value (height) because is sometimes needed when generating terrain. Is currently setting it to 0
- A description of how to use the code because it's easy to forget
- Cut 3d mesh with plane



------------------------
Finished
------------------------

Tests:
- Is a triangle oriented clockwise?
- Is a point left, on, or right of vector?
- Is a point left, on, or right of a plane?
- Is a point inside or outside a circle?
- Is a quadrilateral convex?

Intersections:
- Point in triangle
- Point in polygon
- Triangle-triangle
- AABB
- Rectangle intersection with Separating Axis Theorem (SAT)
- Line-line
- Ray-plane

Convex Hull:
- Jarvis March - with colinear points. Is better than Graham scan because more robust

Triangulation:
- Triangulate convex polygon
- Triangulate convex random points with "visible edge" and "point-by-point" algorithms
- Triangulate convex random points with delaunay triangulation - "point-by-point"
- Triangulate convex random points with delaunay triangulation - "triangulate and then flip all edges"
- Constrained delaunay

Other:
- Voronoi point-by-point (suffers from floating point precision issues)
- Voronoi from delaunay
